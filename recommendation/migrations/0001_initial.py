# Generated by Django 4.2.23 on 2025-08-03 09:12

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Major",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="专业名称")),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="专业代码"
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="学科门类"
                    ),
                ),
                (
                    "subject",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="学科"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="专业描述"),
                ),
                (
                    "career_prospects",
                    models.TextField(blank=True, null=True, verbose_name="就业前景"),
                ),
            ],
            options={
                "verbose_name": "专业",
                "verbose_name_plural": "专业",
            },
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="学校名称")),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="学校代码"
                    ),
                ),
                ("province", models.CharField(max_length=20, verbose_name="所在省份")),
                ("city", models.CharField(max_length=20, verbose_name="所在城市")),
                (
                    "level",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="学校等级"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="学校类型"
                    ),
                ),
                ("is_985", models.BooleanField(default=False, verbose_name="985工程")),
                ("is_211", models.BooleanField(default=False, verbose_name="211工程")),
                (
                    "is_double_first_class",
                    models.BooleanField(default=False, verbose_name="双一流"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="学校简介"),
                ),
                (
                    "website",
                    models.URLField(blank=True, null=True, verbose_name="官网网址"),
                ),
            ],
            options={
                "verbose_name": "学校",
                "verbose_name_plural": "学校",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, verbose_name="姓名")),
                (
                    "gender",
                    models.CharField(
                        blank=True, max_length=10, null=True, verbose_name="性别"
                    ),
                ),
                ("province", models.CharField(max_length=20, verbose_name="所在省份")),
                (
                    "education_path",
                    models.CharField(
                        choices=[
                            ("高考", "高考"),
                            ("专升本", "专升本"),
                            ("考研", "考研"),
                            ("艺考", "艺考"),
                        ],
                        default="高考",
                        max_length=20,
                        verbose_name="教育路径",
                    ),
                ),
                (
                    "total_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(750),
                        ],
                        verbose_name="总分",
                    ),
                ),
                (
                    "chinese_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(150),
                        ],
                        verbose_name="语文成绩",
                    ),
                ),
                (
                    "math_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(150),
                        ],
                        verbose_name="数学成绩",
                    ),
                ),
                (
                    "english_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(150),
                        ],
                        verbose_name="英语成绩",
                    ),
                ),
                (
                    "comprehensive_score",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(300),
                        ],
                        verbose_name="综合成绩",
                    ),
                ),
                (
                    "interests",
                    models.TextField(blank=True, null=True, verbose_name="兴趣爱好"),
                ),
                (
                    "career_goals",
                    models.TextField(blank=True, null=True, verbose_name="职业规划"),
                ),
                ("rank", models.IntegerField(blank=True, null=True, verbose_name="位次")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
            ],
            options={
                "verbose_name": "学生",
                "verbose_name_plural": "学生",
            },
        ),
        migrations.CreateModel(
            name="StudyPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="计划标题")),
                ("description", models.TextField(verbose_name="计划描述")),
                (
                    "start_date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="开始日期"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="结束日期"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="study_plans",
                        to="recommendation.student",
                        verbose_name="学生",
                    ),
                ),
                (
                    "target_major",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="recommendation.major",
                        verbose_name="目标专业",
                    ),
                ),
                (
                    "target_school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="recommendation.school",
                        verbose_name="目标学校",
                    ),
                ),
            ],
            options={
                "verbose_name": "学习计划",
                "verbose_name_plural": "学习计划",
            },
        ),
        migrations.CreateModel(
            name="ScoreLine",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(verbose_name="年份")),
                ("province", models.CharField(max_length=20, verbose_name="招生省份")),
                (
                    "batch",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="批次"
                    ),
                ),
                ("score", models.IntegerField(verbose_name="录取分数")),
                (
                    "min_rank",
                    models.IntegerField(blank=True, null=True, verbose_name="最低位次"),
                ),
                (
                    "major",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="score_lines",
                        to="recommendation.major",
                        verbose_name="专业",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="score_lines",
                        to="recommendation.school",
                        verbose_name="学校",
                    ),
                ),
            ],
            options={
                "verbose_name": "分数线",
                "verbose_name_plural": "分数线",
            },
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("safety", "保底"),
                            ("match", "匹配"),
                            ("challenge", "冲刺"),
                        ],
                        max_length=20,
                        verbose_name="推荐类型",
                    ),
                ),
                (
                    "match_score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="匹配度",
                    ),
                ),
                (
                    "admission_probability",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="录取概率",
                    ),
                ),
                (
                    "recommendation_reason",
                    models.TextField(blank=True, null=True, verbose_name="推荐理由"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                (
                    "major",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="recommendation.major",
                        verbose_name="推荐专业",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="recommendation.school",
                        verbose_name="推荐学校",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to="recommendation.student",
                        verbose_name="学生",
                    ),
                ),
            ],
            options={
                "verbose_name": "推荐结果",
                "verbose_name_plural": "推荐结果",
            },
        ),
    ]
